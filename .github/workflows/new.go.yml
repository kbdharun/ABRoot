name: Go (test-integration)

on:
  push:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/vanilla-os/pico:main

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.21

      - name: Install build dependencies
        run: |
          apt-get update
          apt-get install -y libbtrfs-dev libdevmapper-dev libgpgme-dev pkg-config build-essential libdpkg-dev

      - name: Build
        run: go build -o abrootv2

      - name: Test
        run: go test -v ./tests/...

      - name: Compress
        run: tar -czvf abrootv2.tar.gz abrootv2

      - name: Compress-manpage
        run: tar -czvf abroot-man.tar.gz man/man1/abroot.1

      - uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            abrootv2.tar.gz
            abroot-man.tar.gz

  test:
    name: Integration Test
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/vanilla-os/pico:main
    needs: build
    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: artifacts

      - name: Install Dependencies
        run: |
          apt-get update
          apt-get install -y parted mount kpartx kmod linux-image-amd64

      - name: Load loop module
        run: |
            modprobe loop
    
      - name: Verify loop module
        run: |
            lsmod | grep loop

      - name: Extract Build
        run: |
          tar -xzvf artifacts/abrootv2.tar.gz -C .

      - name: Create and Setup Virtual Disks
        run: |
          # Create virtual disk files
          dd if=/dev/zero of=vos-var.img bs=1M count=1024
          dd if=/dev/zero of=vos-a.img bs=1M count=1024
          dd if=/dev/zero of=vos-b.img bs=1M count=1024
          dd if=/dev/zero of=vos-boot.img bs=1M count=100
          dd if=/dev/zero of=vos-efi.img bs=1M count=100

          # Check virtual disk files
          ls -l vos-*.img

          # Associate virtual disks with loop devices
          LOOP_VAR=$(losetup -Pf --show vos-var.img)
          LOOP_A=$(losetup -Pf --show vos-a.img)
          LOOP_B=$(losetup -Pf --show vos-b.img)
          LOOP_BOOT=$(losetup -Pf --show vos-boot.img)
          LOOP_EFI=$(losetup -Pf --show vos-efi.img)

          # Check loop devices
          losetup -a

          # Format virtual disks
          mkfs.ext4 $LOOP_VAR -L vos-var
          mkfs.ext4 $LOOP_A -L vos-a
          mkfs.ext4 $LOOP_B -L vos-b
          mkfs.ext4 $LOOP_BOOT -L vos-boot
          mkfs.vfat $LOOP_EFI -n vos-efi

      - name: Run Integration Test
        run: |
          ./abrootv2 status

  release:
    name: Release
    needs: [test]
    runs-on: ubuntu-latest
    if: github.repository == 'vanilla-os/ABRoot' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: build-artifacts
      - uses: softprops/action-gh-release@v2
        with:
          token: "${{ secrets.GITHUB_TOKEN }}"
          tag_name: "continuous"
          prerelease: true
          name: "Continuous Build"
          files: |
            abrootv2.tar.gz
            abroot-man.tar.gz
